from source.IO.dataset_import.DataImport import DataImport
from source.IO.dataset_import.DatasetImportParams import DatasetImportParams
from source.data_model.dataset.RepertoireDataset import RepertoireDataset
from source.util.ImportHelper import ImportHelper


class OLGAImport(DataImport):
    """
    Imports data generated by OLGA simulations into a RepertoireDataset. Assumes one file per repertoire
    and that each file includes a header with column names.
    """

    @staticmethod
    def import_dataset(params: dict) -> RepertoireDataset:
        olga_params = DatasetImportParams.build_object(**params)
        return ImportHelper.import_repertoire_dataset(OLGAImport.preprocess_repertoire, olga_params)

    @staticmethod
    def preprocess_repertoire(metadata: dict, params: DatasetImportParams):
        df = ImportHelper.load_repertoire_as_dataframe(metadata, params)

        if "sequences" not in df.columns and "sequence_aas" not in df.columns:
            raise IOError("OLGAImport: Columns should contain at least 'sequences' or 'sequence_aas'.")

        if "counts" not in df.columns:
            df["counts"] = 1

        df["sequence_identifiers"] = None

        return df

